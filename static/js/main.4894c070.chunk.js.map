{"version":3,"sources":["redux/contacts/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","contactId","changeFilter","filter","INITIAL_STATE","alert","ContactForm","state","handleChange","type","e","contacts","props","find","toLowerCase","target","value","setState","handleSubmit","preventDefault","onAddContact","contactInState","changeState","setTimeout","this","onSubmit","onChange","className","CSSTransition","onEntered","in","timeout","classNames","unmountOnExit","Component","mapDispatchToProps","contactsActions","connect","items","ContactListItem","onClickRemove","onClick","ownProps","item","dispatch","defaultProps","includes","TransitionGroup","component","map","Filter","onChangeFilter","App","handleAddContact","newContact","prevState","handleCheckUniqueContact","isExistContact","handleRemoveContact","handleChangeFilter","getVisibleContacts","localStorage","getItem","parsedContacts","JSON","parse","console","log","nowContacts","setItem","stringify","visibleContacts","title","onAdd","onCheckUnique","onRemove","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4894c070.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction(\"contacts/addContact\", (name, number) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst removeContact = createAction(\"contacts/removeContact\", (contactId) => ({\r\n  payload: { contactId },\r\n}));\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\", (filter) => ({\r\n  payload: { filter },\r\n}));\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  changeFilter,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./ContactForm.css\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n  alert: false,\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = INITIAL_STATE;\r\n\r\n  handleChange = (type, e) => {\r\n    const { contacts } = this.props;\r\n    if (type === \"name\") {\r\n      const contactInState = contacts.find(\r\n        (contact) => contact.name.toLowerCase() === e.target.value.toLowerCase()\r\n      );\r\n      if (contactInState) {\r\n        this.setState({ alert: true });\r\n      }\r\n    }\r\n    this.setState({ [type]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAddContact, contacts } = this.props;\r\n    const contactInState = contacts.find(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    contactInState && this.setState({ alert: true });\r\n    if (!contactInState && name && number) {\r\n      onAddContact(name, number);\r\n      this.setState(INITIAL_STATE);\r\n      return;\r\n    }\r\n  };\r\n\r\n  changeState = () => {\r\n    setTimeout(() => this.setState({ alert: false }), 2000);\r\n  };\r\n\r\n  render() {\r\n    const { name, number, alert } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h3>Name</h3>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => this.handleChange(\"name\", e)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <h3>Number</h3>\r\n          <label>\r\n            <input\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={(e) => this.handleChange(\"number\", e)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\" className=\"buttonForm\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <CSSTransition\r\n          onEntered={() => this.changeState()}\r\n          in={alert}\r\n          timeout={500}\r\n          classNames=\"Alert-anime\"\r\n          unmountOnExit\r\n        >\r\n          <p className=\"Alert-wrp\">This name is already in contacts!</p>\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\nconst ContactListItem = ({ name, number, onClickRemove }) => {\r\n  return (\r\n    <li className=\"ContactListItem\">\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className=\"ContactsList-button\"\r\n        onClick={onClickRemove}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { items } = state.contacts;\r\n  const contact = items.find((item) => item.id === ownProps.id);\r\n  return { ...contact };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClickRemove: () => dispatch(contactsActions.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n\r\nContactListItem.defaultProps = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClickRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./ContactList.css\";\r\nimport ContactListItem from \"./ContactListItem\";\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"ContactsList\">\r\n      {contacts.map(({ id }) => (\r\n        <CSSTransition key={id} timeout={500} classNames=\"Contact-anime\">\r\n          <ContactListItem key={id} id={id} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const filteredContacts = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n  return { contacts: filteredContacts };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Filter.css\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div className=\"Filter\">\r\n    <p>Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChangeFilter} />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.defaultProps = {\r\n  value: \"\",\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n    console.log(parsedContacts);\r\n    if (parsedContacts) this.setState({ contacts: parsedContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    const { contacts: nowContacts } = this.state;\r\n    const { contacts: prevContacts } = prevState;\r\n    if (nowContacts !== prevContacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(nowContacts));\r\n    }\r\n  }\r\n\r\n  handleAddContact = (newContact) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: [...prevState.contacts, newContact],\r\n      };\r\n    });\r\n  };\r\n\r\n  handleCheckUniqueContact = (name) => {\r\n    const { contacts } = this.state;\r\n    const isExistContact = !!contacts.find((contact) => contact.name === name);\r\n    isExistContact && alert(`${isExistContact.name} is already in contacts!`);\r\n    return !isExistContact;\r\n  };\r\n\r\n  handleRemoveContact = (id) =>\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n\r\n  handleChangeFilter = (filter) => this.setState({ filter });\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <>\r\n        <div className=\"Container\">\r\n          <section title=\"Phonebook\" className=\"Section\">\r\n            <h1>Phonebook</h1>\r\n            <ContactForm\r\n              contacts={contacts}\r\n              onAdd={this.handleAddContact}\r\n              onCheckUnique={this.handleCheckUniqueContact}\r\n            />\r\n          </section>\r\n          <section title=\"Contacts\" className=\"Section\">\r\n            <h2>Contacts</h2>\r\n            <Filter filter={filter} onChange={this.handleChangeFilter} />\r\n            <ContactList\r\n              contacts={visibleContacts}\r\n              onRemove={this.handleRemoveContact}\r\n            />\r\n          </section>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport contactsActions from \"./contactsActions\";\r\n\r\nconst INITIAL_CONTACTS = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst items = createReducer([...INITIAL_CONTACTS], {\r\n  [contactsActions.addContact]: (state, action) => [\r\n    ...state,\r\n    action.payload.contact,\r\n  ],\r\n  [contactsActions.removeContact]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload.contactId),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload.filter,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./base.css\";\r\nimport App from \"./components/App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}